% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/skip_on_os.R
\name{skip_on_os}
\alias{skip_on_os}
\alias{exit_on_os}
\title{Stop Testing on Specific Operating Systems and Architectures}
\usage{
skip_on_os(os, arch = NULL)

exit_on_os(os, arch = NULL)
}
\arguments{
\item{os}{Operating system to not test on; choose one or more from:
\itemize{
 \item \dQuote{\code{windows}}
 \item \dQuote{\code{mac}}
 \item \dQuote{\code{linux}}
 \item \dQuote{\code{solaris}}
}
The following OS designations are accepted as synonyms:
\itemize{
 \item \dQuote{\code{darwin}}: accepted in place of \dQuote{\code{mac}}
 \item \dQuote{\code{sunos}}: accepted in place of \dQuote{\code{solaris}}
}
Pass \code{TRUE} to set \code{os} to all of the above; this is useful
for limiting tests by architecture rather than OS/architecture combos}

\item{arch}{Optional system architectures to not test on; note that this
only applies to operating systems present in \code{os}}
}
\value{
If called within a \CRANpkg{tinytest} test running under \code{os}
and potentially on an \code{arch} system, triggers an exit condition;
otherwise, returns one of
\itemize{
 \item A string saying that the code is running under \code{os}
 \item A string saying that the code is running under \code{os} on an
  \code{arch} system
 \item \code{NULL} invisibly
}
}
\description{
Stop Testing on Specific Operating Systems and Architectures
}
\section{\dQuote{Skip} vs \dQuote{Exit}}{

\pkg{tinyexpect} provides both \dQuote{\code{skip_}} and \dQuote{\code{exit_}}
versions of \dQuote{stop testing} functions due to the different philosophies
of \CRANpkg{tinytest} and \CRANpkg{testthat}; in \CRANpkg{testthat}, tests
are encapsulated by \code{\link[testthat]{test_that}()} to create smaller
testing units within a single test file. As such, if a series of tests need
to be passed over for some reason, it makes sense to \dQuote{skip} a
\code{\link[testthat]{test_that}()} block and move on to the next block

\CRANpkg{tinytest}, however, treats each test file as a testing unit. Each
file in \code{inst/tinytest} is equivalent to a \CRANpkg{testthat}
\code{\link[testthat]{test_that}()} block; as such, if a series of tests need
to be passed over for some reason, it makes sense to \dQuote{exit} a test
file and mnove on to the next file in \code{inst/tinytest}

In order to provide compatibility with users transitioning from
\CRANpkg{testthat} to \CRANpkg{tinytest}, and to provide continuity with the
\CRANpkg{tinytest} philosophy, \pkg{tinyexpect} provides both \code{skip_}-
and \code{exit_}- prefixed \dQuote{stop testing} functions that work
identically to one another
}

\examples{
(system <- tolower(Sys.info()[["sysname"]]))
skip_on_os(system)

# Nothing happens if on a different OS
(other <- sample(setdiff(c("windows", "mac", "linux", "solaris"), system), size = 1L))
skip_on_os(other)

# System architectures can be used to fine-tune skips
(sysarch <- R.version$arch)
skip_on_os(system, arch = sysarch)

}
\seealso{
\CRANpkg{testthat} equivalent:
\code{\link[testthat:skip_on_os]{testthat::skip_on_os}()}

Tools for querying system OS and architecture:
\code{\link[base]{Sys.info}()}, \code{\link[base]{R.version}[["arch"]]}

Other “stop testing” functions:
\code{\link{skip}()},
\code{\link{skip_if_not_installed}()},
\code{\link{skip_on_bioc}()},
\code{\link{skip_on_ci}()},
\code{\link{skip_on_covr}()},
\code{\link{skip_on_cran}()}
}
\concept{skip}
